<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.it.junly.mapper.AuthorityMapper" >
  <resultMap id="BaseResultMap" type="com.it.junly.po.Authority" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="data_url" property="dataUrl" jdbcType="VARCHAR" />
    <result column="menu_class" property="menuClass" jdbcType="VARCHAR" />
    <result column="menu_code" property="menuCode" jdbcType="VARCHAR" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="parent_menucode" property="parentMenucode" jdbcType="VARCHAR" />
    <result column="sequence" property="sequence" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- 结果映射 -->
  <resultMap type="com.it.junly.po.Authority" id="AuthorityALL" extends="BaseResultMap">
         <collection property="childMenucodes" column="menu_code" select="selectAuthorityChilds"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, data_url, menu_class, menu_code, menu_name, parent_menucode, sequence
  </sql>
  
  <!-- 查询所有可用菜单 -->
  <select id="selectAuthorityALL" resultMap="AuthorityALL" parameterType="String" >
        select 
           <include refid="Base_Column_List" />
            from authority where parent_menucode =#{value}
  </select>
  
   <!--  -->
   <select id="selectAuthorityParent" resultMap="AuthorityALL" parameterType="String">
           select 
           <include refid="Base_Column_List" />
            from authority where parent_menucode =#{value}
   </select>
   
    <!-- 查找子类 -->
    <select id="selectAuthorityChilds" resultMap="AuthorityALL" parameterType="String">
           select 
           <include refid="Base_Column_List" />
            from authority where parent_menucode =#{value}
   </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.it.junly.po.AuthorityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from authority
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from authority
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.it.junly.po.AuthorityExample" >
    delete from authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.it.junly.po.Authority" >
    insert into authority (id, data_url, menu_class, 
      menu_code, menu_name, parent_menucode, 
      sequence)
    values (#{id,jdbcType=BIGINT}, #{dataUrl,jdbcType=VARCHAR}, #{menuClass,jdbcType=VARCHAR}, 
      #{menuCode,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, #{parentMenucode,jdbcType=VARCHAR}, 
      #{sequence,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.it.junly.po.Authority" >
    insert into authority
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dataUrl != null" >
        data_url,
      </if>
      <if test="menuClass != null" >
        menu_class,
      </if>
      <if test="menuCode != null" >
        menu_code,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="parentMenucode != null" >
        parent_menucode,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dataUrl != null" >
        #{dataUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuClass != null" >
        #{menuClass,jdbcType=VARCHAR},
      </if>
      <if test="menuCode != null" >
        #{menuCode,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentMenucode != null" >
        #{parentMenucode,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.it.junly.po.AuthorityExample" resultType="java.lang.Integer" >
    select count(*) from authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update authority
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.dataUrl != null" >
        data_url = #{record.dataUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.menuClass != null" >
        menu_class = #{record.menuClass,jdbcType=VARCHAR},
      </if>
      <if test="record.menuCode != null" >
        menu_code = #{record.menuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.menuName != null" >
        menu_name = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentMenucode != null" >
        parent_menucode = #{record.parentMenucode,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update authority
    set id = #{record.id,jdbcType=BIGINT},
      data_url = #{record.dataUrl,jdbcType=VARCHAR},
      menu_class = #{record.menuClass,jdbcType=VARCHAR},
      menu_code = #{record.menuCode,jdbcType=VARCHAR},
      menu_name = #{record.menuName,jdbcType=VARCHAR},
      parent_menucode = #{record.parentMenucode,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.it.junly.po.Authority" >
    update authority
    <set >
      <if test="dataUrl != null" >
        data_url = #{dataUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuClass != null" >
        menu_class = #{menuClass,jdbcType=VARCHAR},
      </if>
      <if test="menuCode != null" >
        menu_code = #{menuCode,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentMenucode != null" >
        parent_menucode = #{parentMenucode,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.it.junly.po.Authority" >
    update authority
    set data_url = #{dataUrl,jdbcType=VARCHAR},
      menu_class = #{menuClass,jdbcType=VARCHAR},
      menu_code = #{menuCode,jdbcType=VARCHAR},
      menu_name = #{menuName,jdbcType=VARCHAR},
      parent_menucode = #{parentMenucode,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>